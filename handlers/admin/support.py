from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.utils.deep_linking import decode_payload, create_start_link

from settings import ADMIN_USER_IDS, TOKEN, SUPER_ADMIN_USER_IDS, paid_days
from keyboards import reply, inline, builders 
from filters.is_admin import IsAdmin
from filters.is_superadmin import IsSuperAdmin

class SuggestIdea(StatesGroup):
    idea = State()
    seek_help = State()
    send_answer = State()


router = Router()

support_hint = (
    "–í —ç—Ç–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º "
            f"–±–æ—Ç–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–æ –¥–Ω–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏–µ –±–æ—Ç–∞, –∏ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n–í—Å—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è "
            "—É –í–∞—Å –≤ –±–æ—Ç–µ. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –æ—Ç–≤–µ—Ç—è—Ç –í–∞–º –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.")

@router.message(IsAdmin(), F.text.lower() == "üõ† –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_selected(message: Message, bot: Bot):
    bot_me = await bot.get_me()
    await message.answer(
        f"üõ† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏: <b>{paid_days}</b>\n")
    await message.answer(support_hint, reply_markup=await inline.passage_to_support(bot_me.username))
       
@router.callback_query(IsAdmin(), F.data == "suggest_idea")
async def suggest_idea(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", reply_markup=inline.cancel_action)
    await state.set_state(SuggestIdea.idea)
    
@router.message(IsAdmin(), SuggestIdea.idea)
async def send_idea(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(idea=message.text)
    request_subject = f"–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {message.from_user.username}\n\n{message.text}"
    for super_admin in SUPER_ADMIN_USER_IDS:
        await bot.send_message(super_admin, request_subject, reply_markup=inline.answer_idea)
    await state.set_state(SuggestIdea.seek_help)
    
@router.callback_query(IsSuperAdmin(), F.data == "answer_idea", SuggestIdea.seek_help)
async def answer_idea(callback: CallbackQuery, state: FSMContext):
    ...
   

