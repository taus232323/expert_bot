from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from keyboards import inline, builders
from filters import IsAdmin
from data.requests import set_case, delete_case, edit_case


class AddCase(StatesGroup):
    title = State()
    description = State()
    
    
class EditCase(StatesGroup):
    _id = State()
    title = State()
    description = State()
    
    
router = Router()
admin_hint = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏üëá"


@router.callback_query(IsAdmin(), F.data == "add_case")
async def add_more_case(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AddCase.title)
    await callback.message.edit_text(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–µ–π—Å–∞. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é –µ–≥–æ –¥–ª–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 40 –∑–Ω–∞–∫–æ–≤', 
                                     reply_markup=inline.cancel_action)
    
@router.message(IsAdmin(), AddCase.title)
async def add_case_title(message: Message, state: FSMContext):
    if len(message.text) > 40:
        await message.answer('–Ø –∂–µ –ø—Ä–æ—Å–∏–ª –Ω–µ –±–æ–ª—å—à–µ 40 –∑–Ω–∞–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', 
                             reply_markup=inline.cancel_action)
        return
    await state.update_data(title=message.text)
    await state.set_state(AddCase.description)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–µ–π—Å–∞', reply_markup=inline.cancel_action)

@router.message(IsAdmin(), AddCase.description)
async def add_case_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    data = await state.get_data()
    await set_case(data)
    await state.clear()
    await message.answer('–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=await builders.admin_get_cases())

@router.callback_query(IsAdmin(), F.data.startswith("delete_case_"))
async def delete_case_selected(callback: CallbackQuery):
    await delete_case(callback.data.split('_')[2])
    await callback.answer("–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω", reply_markup=await builders.admin_get_cases())
    markup = await builders.admin_get_cases_kb()
    num_buttons = sum(len(row) for row in markup.inline_keyboard)
    if num_buttons > 2: 
        await callback.message.edit_text("–ú–æ–∏ —Å–∞–º—ã–µ –ª—É—á—à–∏–µ –∫–µ–π—Å—ã", reply_markup=markup)
    else:
        await callback.message.edit_text("–í—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–µ–π—Å–∞", reply_markup=inline.new_case)
    
@router.callback_query(IsAdmin(), F.data.startswith("edit_case_"))
async def edit_case_selected(callback: CallbackQuery, state: FSMContext):
    await state.update_data(_id=callback.data.split('_')[2])
    await state.set_state(EditCase.title)
    await callback.message.edit_text(
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–µ–π—Å–∞. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é –µ–≥–æ –¥–ª–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 40 –∑–Ω–∞–∫–æ–≤', 
                                     reply_markup=inline.cancel_action)
    
@router.message(IsAdmin(), EditCase.title)
async def edit_case_title(message: Message, state: FSMContext):
    if len(message.text) > 40:
        await message.answer('–Ø –∂–µ –ø—Ä–æ—Å–∏–ª –Ω–µ –±–æ–ª—å—à–µ 40 –∑–Ω–∞–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', 
                             reply_markup=inline.cancel_action)
        return
    await state.update_data(title=message.text)
    await state.set_state(EditCase.description)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–µ–π—Å–∞', reply_markup=inline.cancel_action)

@router.message(IsAdmin(), EditCase.description)
async def edit_case_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    data = await state.get_data()
    await edit_case(data)
    await state.clear()
    await message.answer('–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω', reply_markup=await builders.admin_get_cases_kb())