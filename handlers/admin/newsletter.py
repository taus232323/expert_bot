from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from keyboards import inline
from filters.is_admin import IsAdmin
from data.requests import get_max_user_id, get_users


admin_hint = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏üëá"
router = Router()

class Newsletter(StatesGroup):
    message = State()
    

@router.message(IsAdmin(), F.text.lower() == '‚úç—Ä–∞—Å—Å—ã–ª–∫–∞')
async def newsletter(message: Message, state: FSMContext):
    max_id = await get_max_user_id()
    await state.set_state(Newsletter.message)
    with open('handlers/admin/newsletter_hint.txt', 'r', encoding='utf-8') as text:
        newsletter_hint = text.read()
    await message.answer(newsletter_hint)
    await message.answer(
        f'–°–µ–π—á–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –í–∞—à–µ–π –±–∞–∑–µ: <b>{max_id}</b>\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–º —Ä–∞–∑–æ—Å–ª–∞—Ç—å', 
                         reply_markup=inline.cancel_action)
    
@router.message(IsAdmin(), Newsletter.message)
async def newsletter_message(message: Message, state: FSMContext):
    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ... –∏–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞üîä.')
    max_id = await get_max_user_id()
    fail = 0
    for user in await get_users():
        try:
            await message.send_copy(chat_id=user.tg_id)
        except:
            fail += 1
            pass
    success = max_id - fail
    await message.answer(
        f'üéâ –†–∞—Å—Å—ã–ª–∫–µ —É—Å–ø–µ—à–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ <b>{success}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n'
        f'‚õîÔ∏è –ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ <b>{fail}</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º')
    await state.clear()