from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup


from keyboards import inline, reply
from filters.is_admin import IsAdmin
from data.requests import get_welcome, set_welcome, edit_welcome, delete_welcome


admin_hint = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏üëá"
router = Router()

class AddWelcome(StatesGroup):
    picture = State()
    about = State()


class EditWelcome(StatesGroup):
    _id = State()
    picture = State()
    about = State()    
    

@router.message(IsAdmin(), F.text.lower() == "üëã —Ç–≥-–≤–∏–∑–∏—Ç–∫–∞")    
async def welcome_selected(message: Message):
    welcome = await get_welcome()
    if welcome:
        await message.answer_photo(welcome.picture, welcome.about, reply_markup=inline.edit_welcome)
    else:
        await message.answer('–í—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–µ–ª–µ–≥—Ä–∞–º-–≤–∏–∑–∏—Ç–∫—É(—ç—Ç–æ –ø–µ—Ä–≤–æ–µ —á—Ç–æ —è –Ω–∞–ø–∏—à—É –í–∞—à–µ–º—É '
                             '–∫–ª–∏–µ–Ω—Ç—É –ø–æ–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω –Ω–∞–∂–º—ë—Ç –∫–Ω–æ–ø–∫—É START). –•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–µ–π—á–∞—Å?',
                             reply_markup=inline.new_welcome)
        
@router.callback_query(IsAdmin(), F.data == "add_welcome")
async def add_welcome(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(f'üì∑ –î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë —Å–∞–º–æ–µ –ª—É—á—à–µ–µ —Ñ–æ—Ç–æ!\n\n'
        '‚ö†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (—Ç–µ–ª–µ–≥—Ä–∞–º-–≤–∏–∑–∏—Ç–∫–∏) '
        '–í—ã –Ω–∞–π–¥–µ—Ç–µ –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ @botpbu - –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏ '
        '–≤—ã–±–µ—Ä–µ—Ç–µ —Ö–µ—à—Ç–µ–≥ #–¢–µ–ª–µ–≥—Ä–∞–º–≤–∏–∑–∏—Ç–∫–∞', reply_markup=inline.cancel_action)
    await  state.set_state(AddWelcome.picture)

@router.message(IsAdmin(), AddWelcome.picture)
async def add_welcome_picture(message: Message, state: FSMContext):
    if message.photo:
        await state.update_data(picture=message.photo[-1].file_id)
        await state.set_state(AddWelcome.about)
        await message.answer(
    '–¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –≤–∫—Ä–∞—Ç—Ü–µ –∫—Ç–æ –í—ã  –∏ —á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å. –û—Å—Ç–∞–ª—å–Ω–æ–µ –º—ã –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é', 
                        reply_markup=inline.cancel_action)
    else:
        await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ —Ñ–æ—Ç–æ, –∏–ª–∏ –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–∂–∞—Ç–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
                             reply_markup=inline.cancel_action)
        return
    
@router.message(IsAdmin(), AddWelcome.about)
async def add_welcome_about(message: Message, state: FSMContext):
    await state.update_data(about=message.text)
    data = await state.get_data()
    await set_welcome(data)
    await state.clear()
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –¥—Ä—É–≥–∏–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –Ω–∏–∂–µ', 
        reply_markup=reply.admin_main)
    
@router.callback_query(IsAdmin(), F.data == "edit_welcome")
async def edit_welcome_selected(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await callback.message.answer('üì∑ –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –µ—â—ë –ª—É—á—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ!', reply_markup=inline.cancel_action)
    await state.set_state(EditWelcome.picture)
    
@router.message(IsAdmin(), EditWelcome.picture)
async def edit_welcome_picture(message: Message, state: FSMContext):
    if message.photo:
        await state.update_data(picture=message.photo[-1].file_id)
        await state.set_state(EditWelcome.about)
        await message.answer(
            '–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ', reply_markup=inline.cancel_action)
    else:
        await message.answer('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å–∞–º–æ–µ –ª—É—á—à–µ–µ —Ñ–æ—Ç–æ, –∏–ª–∏ –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–∂–∞—Ç–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑', 
                             reply_markup=inline.cancel_action)
        return
    
@router.message(IsAdmin(), EditWelcome.about)
async def edit_welcome_about(message: Message, state: FSMContext):
    await state.update_data(about=message.text)
    data = await state.get_data()
    await edit_welcome(data)
    await state.clear()
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –¥—Ä—É–≥–∏–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –Ω–∏–∂–µ',
        reply_markup=reply.admin_main)
    
@router.callback_query(IsAdmin(), F.data == "predelete_welcome")
async def predelete_welcome(callback: CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.answer('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?',
                                     reply_markup=inline.confirm_delete_welcome)
    
@router.callback_query(IsAdmin(), F.data == "delete_welcome")
async def confirmed_delete_welcome(callback: CallbackQuery):
    await callback.message.delete_reply_markup()
    await callback.message.delete()
    await delete_welcome()
    await callback.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ')
    await callback.message.answer(admin_hint, reply_markup=reply.admin_main)